#! /usr/bin/env Rscript
library('knitr')
library('crayon')
library('formatR')

source_code = function(R_file){
    cat(red(paste('Sourcing code for',R_file)),"\n")
    dir = "append_code/"
    ml = 40
    ts = tidy_source(R_file,width.cutoff=ml,output=FALSE)$text.tidy

    if(length(ts)>0){
        for(t in 1:length(ts)){
            ss = substr(ts[t],1,1)
            if(ss=='#' && nchar(ts[t])>ml){
                ts[t] = paste(substr(ts[t],1,ml-4),"...",sep="")
            }
        }
    }
    ts = paste(ts,collapse="\n")
        

    rnw_file = paste(dir,"tmp.Rnw",sep="")

    sink(rnw_file)

    cat(paste("\\documentclass{amsart}\\begin{document}\n<<1,eval=FALSE>>=\n",ts,"\n@\n\\end{document}\n"))

    sink()

    knit(rnw_file,quiet=TRUE)
    
    R_file = rev(strsplit(R_file,'/')[[1]])[1]
    sink(paste(dir,R_file,"source",sep=""))
    cat(paste(system("sed -n '/begin{knitrout}/,/\\end{knitrout}/p' tmp.tex",intern=TRUE),collapse="\n"))
    sink()

    system('rm tmp.tex')
    system('rm append_code/tmp.Rnw')
}

fname = "prelim"
tex_fname = paste(fname,".tex",sep="")
aux_fname = paste(fname,".aux",sep="")
log_fname = paste(fname,".log",sep="")
rnw_fname = paste(fname,".Rnw",sep="")

oldmt = file.info(dir(recursive=TRUE))[,"mtime",drop=FALSE]

while(TRUE){

    old_files = rownames(oldmt)
    old_files = old_files[grepl(".Rnw$",old_files)]

    mt = file.info(dir(recursive=TRUE))[,"mtime",drop=FALSE]
    updt = any(mt[old_files,,drop=FALSE] > oldmt[old_files,,drop=FALSE])

    if(updt){
        cat(format(Sys.time()),"\n")
        cat(blue("Knitting.\n"))
        toss = knit(rnw_fname,quiet=TRUE)

        cat(format(Sys.time()),"\n")

        Rnw_files = rownames(oldmt)
        Rnw_files = old_files[grepl(".Rnw$",old_files)]

        R_files = dir(recursive=TRUE)
        R_files = R_files[grepl(".R$",R_files)]

        toss = sapply(Rnw_files,function(x){purl(x,quiet=TRUE)})
        #toss = sapply(R_files,source_code)
        
        cat(blue("Running LaTex.\n"))
	toss = system(paste("rm",aux_fname),intern=TRUE)
        toss = system(paste("pdflatex -interaction=batchmode",tex_fname),intern=TRUE)
        toss = system(paste("bibtex",aux_fname),intern=TRUE)
        toss = system(paste("pdflatex -interaction=batchmode",tex_fname),intern=TRUE)
        toss = system(paste("pdflatex -interaction=batchmode",tex_fname),intern=TRUE)

        out = system(paste("grep \"!\"",log_fname))        
	if(out == 1){
            cat(green("OK\n"))
            } else {
            cat(red("ERROR\n"))
            }
        cat("==========")
    } else {
        #cat("Waiting.")
    }
    
    oldmt = mt
    Sys.sleep(1/10)
    #flush.console()
}

